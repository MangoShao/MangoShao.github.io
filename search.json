[{"title":"LeetCode 01 Solution","url":"/2021/04/20/LeetCode/01/","content":"法一：暴力class Solution:    def twoSum(self, nums: List[int], target: int) -&gt; List[int]:        lens = len(nums)        for i in range(lens):            j = i + 1            while j &lt; lens:                if nums[i] + nums[j] == target:                    return [i, j]                else:                    j += 1        return None\n\n\n空间：$O(1)$\n时间：$O(n^2)$\n\n法二：哈希表class Solution:    def twoSum(self, nums: List[int], target: int) -&gt; List[int]:        hashtab = &#123;&#125;        for idx, num in enumerate(nums):            other_num = target - num            if other_num in hashtab:                return [hashtab[other_num], idx]            hashtab[num] = idx        return None\n\n\n空间：$O(n)$\n时间：$O(n)$\n\n","categories":["LeetCode"],"tags":["TwoSum | HashList"]},{"title":"plan","url":"/2021/04/19/plan/","content":"202104\n4.20\nSGD\n\n\n4.21\n\n","categories":["Plan"]},{"title":"Optimizers in Machine Learning: SGD","url":"/2021/04/19/Optimization_in_ML/SGD/","content":"Stochastic Gradient Descent (SGD) 是\n","categories":["Optimizers in ML"],"tags":["Optimization|Machine Learning"]}]